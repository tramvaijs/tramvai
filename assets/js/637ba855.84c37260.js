"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2343],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),c=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(r),m=n,h=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return r?a.createElement(h,o(o({ref:t},u),{},{components:r})):a.createElement(h,o({ref:t},u))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},5162:function(e,t,r){r.d(t,{Z:function(){return o}});var a=r(7294),n=r(6010),i="tabItem_Ymn6";function o(e){let{children:t,hidden:r,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,n.Z)(i,o),hidden:r},t)}},4866:function(e,t,r){r.d(t,{Z:function(){return N}});var a=r(7462),n=r(7294),i=r(6010),o=r(2466),l=r(6550),s=r(1980),c=r(7392),u=r(12);function d(e){return function(e){return n.Children.map(e,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:r,attributes:a,default:n}}=e;return{value:t,label:r,attributes:a,default:n}}))}function p(e){const{values:t,children:r}=e;return(0,n.useMemo)((()=>{const e=t??d(r);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function m(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:r}=e;const a=(0,l.k6)(),i=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,s._X)(i),(0,n.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(a.location.search);t.set(i,e),a.replace({...a.location,search:t.toString()})}),[i,a])]}function f(e){const{defaultValue:t,queryString:r=!1,groupId:a}=e,i=p(e),[o,l]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=r.find((e=>e.default))??r[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:i}))),[s,c]=h({queryString:r,groupId:a}),[d,f]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,i]=(0,u.Nk)(r);return[a,(0,n.useCallback)((e=>{r&&i.set(e)}),[r,i])]}({groupId:a}),y=(()=>{const e=s??d;return m({value:e,tabValues:i})?e:null})();(0,n.useLayoutEffect)((()=>{y&&l(y)}),[y]);return{selectedValue:o,selectValue:(0,n.useCallback)((e=>{if(!m({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),c(e),f(e)}),[c,f,i]),tabValues:i}}var y=r(2389),v="tabList__CuJ",b="tabItem_LNqP";function k(e){let{className:t,block:r,selectedValue:l,selectValue:s,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.o5)(),p=e=>{const t=e.currentTarget,r=u.indexOf(t),a=c[r].value;a!==l&&(d(t),s(a))},m=e=>{var t;let r=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=u.indexOf(e.currentTarget)+1;r=u[t]??u[0];break}case"ArrowLeft":{const t=u.indexOf(e.currentTarget)-1;r=u[t]??u[u.length-1];break}}null==(t=r)||t.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":r},t)},c.map((e=>{let{value:t,label:r,attributes:o}=e;return n.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:p},o,{className:(0,i.Z)("tabs__item",b,null==o?void 0:o.className,{"tabs__item--active":l===t})}),r??t)})))}function g(e){let{lazy:t,children:r,selectedValue:a}=e;if(r=Array.isArray(r)?r:[r],t){const e=r.find((e=>e.props.value===a));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function w(e){const t=f(e);return n.createElement("div",{className:(0,i.Z)("tabs-container",v)},n.createElement(k,(0,a.Z)({},e,t)),n.createElement(g,(0,a.Z)({},e,t)))}function N(e){const t=(0,y.Z)();return n.createElement(w,(0,a.Z)({key:String(t)},e))}},7637:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return d}});var a=r(7462),n=(r(7294),r(3905)),i=r(4866),o=r(5162);const l={id:"hydration",title:"Hydration"},s=void 0,c={unversionedId:"features/rendering/hydration",id:"features/rendering/hydration",title:"Hydration",description:"Explanation from React documentation:",source:"@site/tmp-docs/03-features/010-rendering/03-hydration.md",sourceDirName:"03-features/010-rendering",slug:"/features/rendering/hydration",permalink:"/docs/features/rendering/hydration",draft:!1,editUrl:"https://github.com/tramvaijs/tramvai/-/edit/master/docs/tmp-docs/03-features/010-rendering/03-hydration.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"hydration",title:"Hydration"},sidebar:"sidebar",previous:{title:"Page Render Mode",permalink:"/docs/features/rendering/page-render-mode"},next:{title:"Static-Site Generation",permalink:"/docs/features/rendering/ssg"}},u={},d=[{value:"Selective Hydration",id:"selective-hydration",level:2},{value:"Explanation",id:"explanation",level:3},{value:"Usage",id:"usage",level:3},{value:"Drawbacks",id:"drawbacks",level:3},{value:"Lazy Hydration",id:"lazy-hydration",level:2},{value:"Explanation",id:"explanation-1",level:3},{value:"More about lazy hydration",id:"more-about-lazy-hydration",level:4},{value:"Installation",id:"installation",level:3},{value:"Usage",id:"usage-1",level:3},{value:"Default mode",id:"default-mode",level:4},{value:"Customize wrapper",id:"customize-wrapper",level:4},{value:"Configuring IntersectionObserver",id:"configuring-intersectionobserver",level:4},{value:"Passing custom observer",id:"passing-custom-observer",level:4},{value:"Server cache",id:"server-cache",level:4},{value:"Cache keys",id:"cache-keys",level:5}],p={toc:d};function m(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Explanation from ",(0,n.kt)("a",{parentName:"p",href:"https://beta.reactjs.org/reference/react-dom/hydrate#hydrating-server-rendered-html"},"React documentation"),":"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"In React, \u201chydration\u201d is how React \u201cattaches\u201d to existing HTML that was already rendered by React in a server environment. During hydration, React will attempt to attach event listeners to the existing markup and take over rendering the app on the client.")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"tramvai")," provides full React 18 support and will automatically use ",(0,n.kt)("a",{parentName:"p",href:"https://beta.reactjs.org/reference/react-dom/client/hydrateRoot"},(0,n.kt)("inlineCode",{parentName:"a"},"hydrateRoot")," API")," at client-side, for older React versions ",(0,n.kt)("a",{parentName:"p",href:"https://beta.reactjs.org/reference/react-dom/hydrate"},(0,n.kt)("inlineCode",{parentName:"a"},"hydrate")," method")," will be used."),(0,n.kt)("p",null,"Hydration is not simple process and usually a one ",(0,n.kt)("a",{parentName:"p",href:"https://web.dev/optimize-long-tasks/"},"long heavy task"),", which can significantly delay the ",(0,n.kt)("a",{parentName:"p",href:"https://web.dev/i18n/en/tti/"},"time to interactivity")," of our application. There is a few optimisations which can improve hydration speed:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#selective-hydration"},"Selective Hydration")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#lazy-hydration"},"Lazy Hydration"))),(0,n.kt)("h2",{id:"selective-hydration"},"Selective Hydration"),(0,n.kt)("h3",{id:"explanation"},"Explanation"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://www.patterns.dev/posts/react-selective-hydration/"},"Selective Hydration")," - it is result of new React ",(0,n.kt)("a",{parentName:"p",href:"https://beta.reactjs.org/blog/2022/03/29/react-v18#what-is-concurrent-react"},"Concurrent Features"),", when hydration and rendering tasks splitted in small pieces of work."),(0,n.kt)("h3",{id:"usage"},"Usage"),(0,n.kt)("p",null,"Selective hydration can be activated by a few options:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://beta.reactjs.org/reference/react/Suspense"},(0,n.kt)("inlineCode",{parentName:"a"},"Suspense"))," wrapper around some heavy component - concurrent rendering will be used only for this component subtree"),(0,n.kt)("li",{parentName:"ul"},"Run ",(0,n.kt)("inlineCode",{parentName:"li"},"hydrateRoot")," inside ",(0,n.kt)("a",{parentName:"li",href:"https://beta.reactjs.org/reference/react/startTransition"},(0,n.kt)("inlineCode",{parentName:"a"},"startTransition"))," - concurrent rendering will be used for all application tree")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"tramvai")," out-of-the-box will wrap ",(0,n.kt)("inlineCode",{parentName:"p"},"hydrateRoot")," in ",(0,n.kt)("inlineCode",{parentName:"p"},"startTransition"),", and selective hydration will be available automatically for all ",(0,n.kt)("inlineCode",{parentName:"p"},"tramvai")," applications with React >= 18 version!"),(0,n.kt)("h3",{id:"drawbacks"},"Drawbacks"),(0,n.kt)("p",null,"Selective hydration is not free:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"full hydration will be delayed because of more async tasks overhead"),(0,n.kt)("li",{parentName:"ul"},"if user interacts with page, React will swich to regular heavy hydration for faster response")),(0,n.kt)("p",null,"Because of that, we recommend to wrap all significant blocks of your application in ",(0,n.kt)("inlineCode",{parentName:"p"},"Suspense"),", because of this benefits:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"after user interaction, React will switch to regular hydration ",(0,n.kt)("strong",{parentName:"li"},"only for this block subtree")),(0,n.kt)("li",{parentName:"ul"},"if this block fails while server rendering, React will render ",(0,n.kt)("inlineCode",{parentName:"li"},"fallback")," and another page content will be rendered as usual (otherwise full page rendering will be failed)")),(0,n.kt)("h2",{id:"lazy-hydration"},"Lazy Hydration"),(0,n.kt)("h3",{id:"explanation-1"},"Explanation"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"tramvai")," provides ",(0,n.kt)("inlineCode",{parentName:"p"},"@tramvai/react-lazy-hydration-render")," - it is a small library to improve hydration performance in SSR apps. It is based on a lazy hydration approach."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Small")," only 650 bytes (minified and gzipped)"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Improves TTI")," do not waste CPU on what the user does not see"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Customize.")," component activation mechanism can be changed")),(0,n.kt)("h4",{id:"more-about-lazy-hydration"},"More about lazy hydration"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/issues/10923#issuecomment-338715787"},"How it works (discussed in issue at react's github)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=UxoX2faIgDQ&t=3372"},"About selective hydration on React Conf 2019")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://youtu.be/NythxcOI2Mw?t=2925"},"react render strategy"))),(0,n.kt)("h3",{id:"installation"},"Installation"),(0,n.kt)(i.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"npm",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @tramvai/react-lazy-hydration-render\n"))),(0,n.kt)(o.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @tramvai/react-lazy-hydration-render\n")))),(0,n.kt)("p",null,"This library is using IntersectionObserver API. if you need to support older browsers, you should install ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/w3c/IntersectionObserver/tree/master/polyfill"},"intersection-observer polyfill")," in order for it to work."),(0,n.kt)("h3",{id:"usage-1"},"Usage"),(0,n.kt)("h4",{id:"default-mode"},"Default mode"),(0,n.kt)("p",null,"Component is activated when user scrolls to it."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport { LazyRender } from '@tramvai/react-lazy-hydration-render';\n\nconst HeavyHeader = () => <header>1</header>;\n\nexport const Header = () => (\n  <LazyRender>\n    <HeavyHeader />\n  </LazyRender>\n);\n")),(0,n.kt)("h4",{id:"customize-wrapper"},"Customize wrapper"),(0,n.kt)("p",null,"You can configure the wrapper component."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport { LazyRender } from '@tramvai/react-lazy-hydration-render';\n\nconst HeavyHeader = () => <header>1</header>;\n\nexport const Header = () => (\n  <LazyRender wrapper=\"p\" wrapperProps={{ style: { margin: '10px' } }}>\n    <HeavyHeader />\n  </LazyRender>\n);\n")),(0,n.kt)("h4",{id:"configuring-intersectionobserver"},"Configuring IntersectionObserver"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport { LazyRender, createUseObserverVisible } from '@tramvai/react-lazy-hydration-render';\n\nconst useObserverVisible = createUseObserverVisible({\n  rootMargin: '0px',\n  threshold: 1.0,\n});\n\nconst HeavyHeader = () => <header>1</header>;\n\nexport const Header = () => (\n  <LazyRender useObserver={useObserverVisible}>\n    <HeavyHeader />\n  </LazyRender>\n);\n")),(0,n.kt)("h4",{id:"passing-custom-observer"},"Passing custom observer"),(0,n.kt)("p",null,"Package supports changing a loading mechanics. For example, component could be activated on click."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},"import React, { useEffect, useState } from 'react';\nimport { LazyRender } from '@tramvai/react-lazy-hydration-render';\n\nconst isServer = typeof window === 'undefined';\n\nconst useClickActivated = (ref) => {\n  const [isVisible, changeVisibility] = useState(isServer);\n\n  useEffect(() => {\n    if (!ref.current || isVisible) {\n      return;\n    }\n\n    ref.current.addEventListener('click', () => changeVisibility(true));\n  }, [ref]);\n\n  return isVisible;\n};\n\nconst HeavyHeader = () => <header>1</header>;\n\nexport const Header = () => (\n  <LazyRender useObserver={useClickActivated}>\n    <HeavyHeader />\n  </LazyRender>\n);\n")),(0,n.kt)("h4",{id:"server-cache"},"Server cache"),(0,n.kt)("p",null,"For maximum rendering performance on server-side, ",(0,n.kt)("inlineCode",{parentName:"p"},"LazyRender")," has ability to cache rendering result (HTML string), and reuse them for subsequent renders."),(0,n.kt)("p",null,"It is very useful for static blocks, but may not be practical for units with different levels of dynamics."),(0,n.kt)("p",null,"Example, how to enable server cache:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\n// can be any other cache library\nimport LRU from '@tinkoff/lru-cache-nano';\nimport { LazyRender } from '@tramvai/react-lazy-hydration-render';\n\nconst serverCache = new LRU({ max: 20, ttl: 60000 });\n\nconst HeavyHeader = () => <header>1</header>;\n\nexport const Header = () => (\n  <LazyRender\n    cacheEnabled={true}\n    cacheKey=\"header\"\n    serverCache={serverCache}\n  >\n    <HeavyHeader />\n  </LazyRender>\n);\n")),(0,n.kt)("h5",{id:"cache-keys"},"Cache keys"),(0,n.kt)("p",null,"If you have a limited set of dynamic options with low cardinality, just use them in ",(0,n.kt)("inlineCode",{parentName:"p"},"cacheKey")," property:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},'export const Header = ({ isMobile }) => {\n  const cacheKey = isMobile ? "header:mobile" : "header:desktop";\n\n  return (\n    <LazyRender\n      cacheEnabled={true}\n      cacheKey={cacheKey}\n      serverCache={serverCache}\n    >\n      <HeavyHeader\n        isMobile={isMobile}\n      />\n    </LazyRender>\n  );\n};\n')))}m.isMDXComponent=!0}}]);