"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9711],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),m=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=m(e.components);return r.createElement(p.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=m(t),f=o,g=u["".concat(p,".").concat(f)]||u[f]||l[f]||a;return t?r.createElement(g,i(i({ref:n},c),{},{components:t})):r.createElement(g,i({ref:n},c))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=u;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var m=2;m<a;m++)i[m]=t[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8858:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return i},default:function(){return l},frontMatter:function(){return a},metadata:function(){return s},toc:function(){return m}});var r=t(7462),o=(t(7294),t(3905));const a={id:"file-system-pages",title:"File-System Pages",sidebar_position:2},i=void 0,s={unversionedId:"features/routing/file-system-pages",id:"features/routing/file-system-pages",title:"File-System Pages",description:"Actual documentation",source:"@site/tmp-docs/features/routing/file-system-pages.md",sourceDirName:"features/routing",slug:"/features/routing/file-system-pages",permalink:"/docs/features/routing/file-system-pages",draft:!1,editUrl:"https://github.com/tramvaijs/tramvai/-/edit/master/docs/tmp-docs/features/routing/file-system-pages.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"file-system-pages",title:"File-System Pages",sidebar_position:2},sidebar:"sidebar",previous:{title:"Versioning",permalink:"/docs/concepts/versioning"},next:{title:"Automatic migrations",permalink:"/docs/features/migration"}},p={},m=[{value:"Migration",id:"migration",level:2}],c={toc:m};function l(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/features/pages#file-system-routing"},"Actual documentation")),(0,o.kt)("h2",{id:"migration"},"Migration"),(0,o.kt)("p",null,"If you want to migrate from bundles to file-system pages, there is few steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Enable ",(0,o.kt)("inlineCode",{parentName:"p"},"fileSystemPages.enable")," option in ",(0,o.kt)("inlineCode",{parentName:"p"},"tramvai.json"),", and change default folders for safety:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "fileSystemPages": {\n    "enable": true,\n    "pagesDir": "new-fs-pages", // file-system pages directory\n    "routesDir": false // force disable file-system routing\n  }\n}\n'))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Split your bundles to components"),(0,o.kt)("p",{parentName:"li"},"from this bundle ",(0,o.kt)("inlineCode",{parentName:"p"},"src/bundles/someBundle.ts"),":"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { createBundle } from '@tramvai/core';\nimport { lazy } from '@tramvai/react';\nimport { actionFoo, actionBar } from '../actions';\nimport { StoreFoo, StoreBar } from '../reducers';\nimport { CommonComponent } from '../components';\n\nconst someBundle = createBundle({\n  name: 'someBundle',\n  components: {\n    'pages/foo-page': lazy(() => import('../pages/Foo')),\n    'pages/bar-page': lazy(() => import('../pages/Bar')),\n    'components/common': CommonComponent,\n  },\n  actions: [actionFoo, actionBar],\n  reducers: [StoreFoo, StoreBar],\n});\n\nexport default someBundle;\n")),(0,o.kt)("p",{parentName:"li"},"you need to create two page components, ",(0,o.kt)("inlineCode",{parentName:"p"},"src/new-fs-pages/foo.tsx")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"src/new-fs-pages/bar.tsx"),", with this content:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { lazy, PageComponent } from '@tramvai/react';\nimport { actionFoo, actionBar } from '../actions';\nimport { StoreFoo, StoreBar } from '../reducers';\nimport { CommonComponent } from '../components';\n\n// the same for src/new-fs-pages/bar.tsx\nconst FooPage: PageComponent = () => {\n  return <h1>Foo Page</h1>;\n}\n\nFooPage.components = {\n    'components/common': CommonComponent,\n};\nFooPage.actions = [actionFoo, actionBar];\nFooPage.reducers = [StoreFoo, StoreBar];\n\nexport default FooPage;\n")),(0,o.kt)("p",{parentName:"li"},"then update your routes config from:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const routes = [\n    {\n        name: 'foo',\n        path: '/foo/',\n        config: {\n            bundle: 'sameBundle',\n            pageComponent: 'pages/foo-page',\n        },\n    },\n    {\n        name: 'bar',\n        path: '/bar/',\n        config: {\n            bundle: 'sameBundle',\n            pageComponent: 'pages/bar-page',\n        },\n    },\n]\n")),(0,o.kt)("p",{parentName:"li"},"to this:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const routes = [\n    {\n        name: 'foo',\n        path: '/foo/',\n        config: {\n            pageComponent: '@/new-fs-pages/foo',\n        },\n    },\n    {\n        name: 'bar',\n        path: '/bar/',\n        config: {\n            pageComponent: '@/new-fs-pages/bar',\n        },\n    },\n]\n")),(0,o.kt)("p",{parentName:"li"},"and remove ",(0,o.kt)("inlineCode",{parentName:"p"},"bundle")," property from ",(0,o.kt)("inlineCode",{parentName:"p"},"createApp")))))}l.isMDXComponent=!0}}]);