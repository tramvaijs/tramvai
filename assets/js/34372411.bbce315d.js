"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5129],{3905:(e,r,n)=>{n.d(r,{Zo:()=>d,kt:()=>u});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=t.createContext({}),s=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):a(a({},r),e)),n},d=function(e){var r=s(e.components);return t.createElement(c.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=s(n),u=o,N=m["".concat(c,".").concat(u)]||m[u]||p[u]||i;return n?t.createElement(N,a(a({ref:r},d),{},{components:n})):t.createElement(N,a({ref:r},d))}));function u(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return t.createElement.apply(null,a)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6450:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var t=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],l={},c=void 0,s={unversionedId:"references/modules/micro-sentry",id:"references/modules/micro-sentry",title:"micro-sentry",description:"Integration with micro-sentry.",source:"@site/tmp-docs/references/modules/micro-sentry.md",sourceDirName:"references/modules",slug:"/references/modules/micro-sentry",permalink:"/docs/references/modules/micro-sentry",draft:!1,editUrl:"https://github.com/tramvaijs/tramvai/-/edit/master/docs/tmp-docs/references/modules/micro-sentry.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"metrics",permalink:"/docs/references/modules/metrics"},next:{title:"mocker",permalink:"/docs/references/modules/mocker"}},d={},p=[{value:"Installation",id:"installation",level:2},{value:"Explanation",id:"explanation",level:2},{value:"Working with unhandled rejections and global errors",id:"working-with-unhandled-rejections-and-global-errors",level:3},{value:"Environment variables",id:"environment-variables",level:3},{value:"How to",id:"how-to",level:2},{value:"Send custom error",id:"send-custom-error",level:3},{value:"Environment variables",id:"environment-variables-1",level:2},{value:"Exported tokens",id:"exported-tokens",level:2},{value:"<code>MICRO_SENTRY_INSTANCE_TOKEN</code>",id:"micro_sentry_instance_token",level:4},{value:"<code>MICRO_SENTRY_OPTIONS_TOKEN</code>",id:"micro_sentry_options_token",level:3},{value:"<code>MICRO_SENTRY_INLINE_ERROR_INTERCEPTOR_KEY_TOKEN</code>",id:"micro_sentry_inline_error_interceptor_key_token",level:3},{value:"<code>MICRO_SENTRY_INLINE_ERROR_INTERCEPTOR_TOKEN</code>",id:"micro_sentry_inline_error_interceptor_token",level:3}],m={toc:p};function u(e){var r=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,t.Z)({},m,n,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Integration with ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/taiga-family/micro-sentry"},"micro-sentry"),"."),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("p",null,"You need to install ",(0,i.kt)("inlineCode",{parentName:"p"},"@tramvai/module-micro-sentry"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @tramvai/module-micro-sentry\n")),(0,i.kt)("p",null,"And connect to the project: ",(0,i.kt)("inlineCode",{parentName:"p"},"TramvaiMicroSentryModule"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import { TramvaiMicroSentryModule } from '@tramvai/module-micro-sentry';\n\ncreateApp({\n  modules: [TramvaiMicroSentryModule],\n});\n")),(0,i.kt)("p",null,"And make sure to add ",(0,i.kt)("inlineCode",{parentName:"p"},"SENTRY_DSN")," environment on deployed stands. Otherwise module will not work."),(0,i.kt)("h2",{id:"explanation"},"Explanation"),(0,i.kt)("h3",{id:"working-with-unhandled-rejections-and-global-errors"},"Working with unhandled rejections and global errors"),(0,i.kt)("p",null,"Micro-sentry itself does not have the proper logic to intercept global ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/unhandledrejection_event"},"unhandlerejection")," and ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/error_event"},"error")," events. In this case, ",(0,i.kt)("inlineCode",{parentName:"p"},"@tramvai/module-micro-sentry")," adds an inline script with custom logic for the ",(0,i.kt)("inlineCode",{parentName:"p"},"unhandledrejection")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"error")," events. Before the micro-sentry package is initialized, all errors are added to an errorQueue, and when micro-sentry is initialized, this queue is cleared, and all caught errors are sent to the ",(0,i.kt)("inlineCode",{parentName:"p"},"SENTRY_DSN")," URL. To create your custom global error handler, you can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"MICRO_SENTRY_INLINE_ERROR_INTERCEPTOR_TOKEN"),". For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"// createErrorInterceptor.inline.ts\n\nexport function createErrorInterceptor() {\n  window.onerror = function () {\n    // your custom logic\n  };\n  window.onunhandledrejection = function () {\n    // your custom logic\n  };\n}\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { createApp } from '@tramvai/core';\nimport { TramvaiMicroSentryModule } from '@tramvai/module-micro-sentry';\nimport { createErrorInterceptor } from './createErrorInterceptor.inline';\n\ncreateApp({\n  name: 'sample-application',\n  modules: [\n    TramvaiMicroSentryModule,\n    provide({\n      provide: MICRO_SENTRY_INLINE_ERROR_INTERCEPTOR_TOKEN,\n      useFactory: ({ microSentryInlineErrorInterceptorKey }) => {\n        return `(${createErrorInterceptor})()`;\n      },\n    }),\n  ],\n});\n")),(0,i.kt)("h3",{id:"environment-variables"},"Environment variables"),(0,i.kt)("p",null,"Required:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"SENTRY_DSN")," - ",(0,i.kt)("a",{parentName:"li",href:"https://docs.sentry.io/product/sentry-basics/dsn-explainer/"},"DSN")," of the app")),(0,i.kt)("h2",{id:"how-to"},"How to"),(0,i.kt)("h3",{id:"send-custom-error"},"Send custom error"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import { declareAction } from '@tramvai/core';\nimport { SENTRY_TOKEN } from '@tramvai/module-micro-sentry';\nimport { loadUsers } from './users';\n\nexport default declareAction({\n  name: 'loadUsers',\n  async fn() {\n    try {\n      await loadUsers();\n    } catch (e) {\n      microSentryClient.report(e);\n      throw e;\n    }\n  },\n  deps: {\n    microSentryClient: MICRO_SENTRY_INSTANCE_TOKEN,\n  },\n});\n")),(0,i.kt)("h2",{id:"environment-variables-1"},"Environment variables"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"SENTRY_RELEASE")," - application release version. The value is inserted into the ",(0,i.kt)("inlineCode",{parentName:"li"},"release")," field for all errors"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"SENTRY_ENVIRONMENT")," - the application environment where the error occurred. If the variable is not specified, then ",(0,i.kt)("inlineCode",{parentName:"li"},"process.env.NODE_ENV")," is used")),(0,i.kt)("h2",{id:"exported-tokens"},"Exported tokens"),(0,i.kt)("h4",{id:"micro_sentry_instance_token"},(0,i.kt)("inlineCode",{parentName:"h4"},"MICRO_SENTRY_INSTANCE_TOKEN")),(0,i.kt)("p",null,"Ready to use instance of micro-sentry"),(0,i.kt)("h3",{id:"micro_sentry_options_token"},(0,i.kt)("inlineCode",{parentName:"h3"},"MICRO_SENTRY_OPTIONS_TOKEN")),(0,i.kt)("p",null,"Configuration options for micro-sentry"),(0,i.kt)("h3",{id:"micro_sentry_inline_error_interceptor_key_token"},(0,i.kt)("inlineCode",{parentName:"h3"},"MICRO_SENTRY_INLINE_ERROR_INTERCEPTOR_KEY_TOKEN")),(0,i.kt)("p",null,"Key value for ErrorInterceptor script. This key will be used to save custom logi\u0441 to window object."),(0,i.kt)("h3",{id:"micro_sentry_inline_error_interceptor_token"},(0,i.kt)("inlineCode",{parentName:"h3"},"MICRO_SENTRY_INLINE_ERROR_INTERCEPTOR_TOKEN")),(0,i.kt)("p",null,"Script for inline error interceptor"))}u.isMDXComponent=!0}}]);